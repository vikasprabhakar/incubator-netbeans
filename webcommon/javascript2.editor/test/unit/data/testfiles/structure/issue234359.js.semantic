function |>METHOD:WidgetMilestones<|(|>UNUSED:inHR<|) {
    this.|>FIELD:template<| = "";

    function |>METHOD,UNUSED:getDaysToMilestone<|(|>UNUSED:milestoneName<|) {
        for (var |>LOCAL_VARIABLE_DECLARATION:i<| = 0, |>LOCAL_VARIABLE_DECLARATION:max<| = ChartP3.prototype.milestones.length; |>LOCAL_VARIABLE:i<| < |>LOCAL_VARIABLE:max<|; |>LOCAL_VARIABLE:i<|++) {
         
        }
    }


}

function |>METHOD:ChartP3<|(|>UNUSED:container<|) {

    if (inArchive()) {
        return;
    }

    function |>METHOD:inArchive<|() {
        var |>LOCAL_VARIABLE_DECLARATION:t<| = /.+\.([^?]+)(\?|$)/;
        var |>LOCAL_VARIABLE_DECLARATION:results<| = |>GLOBAL:window<|.location.pathname.match(|>LOCAL_VARIABLE:t<|);
        if (|>LOCAL_VARIABLE:results<| && |>LOCAL_VARIABLE:results<|.length > 1) {
            if (|>LOCAL_VARIABLE:results<|[1] === "html") {
                return true;
            }
        }
        return false;
    }

    var |>LOCAL_VARIABLE_DECLARATION:self<| = this;
    |>LOCAL_VARIABLE:self<|.|>CLASS:predictionLinearData<| = {
        |>FIELD:betaFound<|: true
    };

    |>LOCAL_VARIABLE:self<|.|>FIELD:codeFreezeQC<| = -1;
    |>LOCAL_VARIABLE:self<|.|>FIELD:milestones<| = [];

    for (var |>LOCAL_VARIABLE_DECLARATION:i<| = 0, |>LOCAL_VARIABLE_DECLARATION:max<| = ChartP3.prototype.milestones.length; |>LOCAL_VARIABLE:i<| < |>LOCAL_VARIABLE:max<|; |>LOCAL_VARIABLE:i<|++) {
        |>LOCAL_VARIABLE:self<|.|>FIELD:milestones<|.push(cloneMilestone(ChartP3.prototype.milestones[|>LOCAL_VARIABLE:i<|]));
    }



    function |>METHOD:cloneMilestone<|(milestone) {
        return {
            |>FIELD:name<|: milestone.name,
            |>FIELD:timestamp<|: milestone.realTimestamp,
            |>FIELD:date<|: milestone.dateWithoutTime
        };
    }
}
